(0000) 3000 0011000000000000 (  1)                         .ORIG 0x3000
(3000) E06D 1110000001101101 (  2) OUT_PROMPT              LEA R0, PROMPT
(3001) F022 1111000000100010 (  3)                         PUTS
(3002) 5B60 0101101101100000 (  4)                         AND R5, R5, #0
(3003) 1B6A 0001101101101010 (  5)                         ADD R5, R5, #10
(3004) 228A 0010001010001010 (  6)                         LD R1, NUMBER
(3005) 482D 0100100000101101 (  7)                         JSR CLEAR_FLAG
(3006) F020 1111000000100000 (  8) GET_INPUT               GETC
(3007) F021 1111000000100001 (  9)                         OUT
(3008) 1636 0001011000110110 ( 10)                         ADD R3, R0, #-10
(3009) 042D 0000010000101101 ( 11)                         BRz CHECK_INPUT
(300A) 2688 0010011010001000 ( 12)                         LD R3, ASCII_NINE
(300B) 96FF 1001011011111111 ( 13)                         NOT R3, R3
(300C) 16E1 0001011011100001 ( 14)                         ADD R3, R3, #1
(300D) 1603 0001011000000011 ( 15)                         ADD R3, R0, R3
(300E) 021F 0000001000011111 ( 16)                         BRp FLAG_THAT
(300F) 2681 0010011010000001 ( 17)                         LD R3, ASCII_ZERO
(3010) 96FF 1001011011111111 ( 18)                         NOT R3, R3
(3011) 16E1 0001011011100001 ( 19)                         ADD R3, R3, #1
(3012) 16C0 0001011011000000 ( 20)                         ADD R3, R3, R0
(3013) 081A 0000100000011010 ( 21)                         BRn FLAG_THAT
(3014) 1D76 0001110101110110 ( 22)                         ADD R6, R5, #-10
(3015) 0815 0000100000010101 ( 23)                         BRn CHECK_ZERO
(3016) 0404 0000010000000100 ( 24)                         BRz SET_TO
(3017) 0E05 0000111000000101 ( 25)                         BRnzp MULTIPLY_BY_TEN
(3018) 1B7F 0001101101111111 ( 26) DECREMENT_INPUT_COUNTER ADD R5, R5, #-1
(3019) 5E60 0000010111100110 ( 27)                         BRz OUT_PROMPT
(301A) 0FEB 0000111111101011 ( 28)                         BRnzp GET_INPUT
(301B) 12E0 0001001011100000 ( 29) SET_TO                  ADD R1, R3, #0
(301C) FFB0 0000111111111011 ( 30)                         BRnzp DECREMENT_INPUT_COUNTER
(301D) 4809 0100100000001001 ( 31) MULTIPLY_BY_TEN         JSR CHECK_FLAG
(301E) 1841 0001100001000001 ( 32)                         ADD R4, R1, R1
(301F) 1D04 0001110100000100 ( 33)                         ADD R6, R4, R4
(3020) 1D86 0001110110000110 ( 34)                         ADD R6, R6, R6
(3021) 1384 0001001110000100 ( 35)                         ADD R1, R6, R4
(3022) 1243 0001001001000011 ( 36)                         ADD R1, R1, R3
(3023) 1870 0001100001110000 ( 37)                         ADD R4, R1, #-16
(3024) 1939 0001100100111001 ( 38)                         ADD R4, R4, #-7
(3025) 0208 0000001000001000 ( 39)                         BRp FLAG_THAT
(3026) 0FF1 0000111111110001 ( 40)                         BRnzp DECREMENT_INPUT_COUNTER
(3027) 2868 0010100001101000 ( 41) CHECK_FLAG              LD R4, FLAG
(3028) 193F 0001100100111111 ( 42)                         ADD R4, R4, #-1
(3029) 05EE 0000010111101110 ( 43)                         BRz DECREMENT_INPUT_COUNTER
(302A) C1C0 1100000111000000 ( 44)                         RET
(302B) 1C7F 0001110001111111 ( 45) CHECK_ZERO              ADD R6, R1, #-1
(302C) 8010 0000100000000001 ( 46)                         BRn FLAG_THAT
(302D) 0FEF 0000111111101111 ( 47)                         BRnzp MULTIPLY_BY_TEN
(302E) E861 1110100001100001 ( 48) FLAG_THAT               LEA R4, FLAG
(302F) 5DA0 0101110110100000 ( 49)                         AND R6, R6, #0
(3030) 1DA1 0001110110100001 ( 50)                         ADD R6, R6, #1
(3031) 7D00 0111110100000000 ( 51)                         STR R6, R4, #0
(3032) 0FE5 0000111111100101 ( 52)                         BRnzp DECREMENT_INPUT_COUNTER
(3033) E85C 1110100001011100 ( 53) CLEAR_FLAG              LEA R4, FLAG
(3034) 5DA0 0101110110100000 ( 54)                         AND R6, R6, #0
(3035) 7D00 0111110100000000 ( 55)                         STR R6, R4, #0
(3036) C1C0 1100000111000000 ( 56)                         RET
(3037) 2658 0010011001011000 ( 57) CHECK_INPUT             LD R3, FLAG
(3038) 16FF 0001011011111111 ( 58)                         ADD R3, R3, #-1
(3039) 07C6 0000011111000110 ( 59)                         BRzp OUT_PROMPT
(303A) 187D 0001100001111101 ( 60)                         ADD R4, R1, #-3
(303B) 09C4 0000100111000100 ( 61)                         BRn OUT_PROMPT
(303C) 56E0 0101011011100000 ( 62)                         AND R3, R3, #0
(303D) 5920 0101100100100000 ( 63)                         AND R4, R4, #0
(303E) 1921 0001100100100001 ( 64)                         ADD R4, R4, #1
(303F) 0E25 0000111000100101 ( 65)                         BRnzp ITERATIVE_FIBONACCI
(3040) 3E58 0011111001011000 ( 66) CONVERT_TO_ASCII        ST R7, SAVER7
(3041) 3858 0011100001011000 ( 67)                         ST R4, SAVER4
(3042) 3658 0011011001011000 ( 68)                         ST R3, SAVER3
(3043) E450 1110010001010000 ( 69)                         LEA R2, NUMBERS
(3044) 5DA0 0101110110100000 ( 70)                         AND R6, R6, #0
(3045) 56E0 0101011011100000 ( 71)                         AND R3, R3, #0
(3046) 6880 0110100010000000 ( 72) OUTER_LOOP              LDR R4, R2, #0
(3047) 4140 0000010000010100 ( 73)                         BRz END
(3048) 993F 1001100100111111 ( 74)                         NOT R4, R4
(3049) 1921 0001100100100001 ( 75)                         ADD R4, R4, #1
(304A) 1B44 0001101101000100 ( 76) INNER_LOOP              ADD R5, R5, R4
(304B) 8020 0000100000000010 ( 77)                         BRn CHECK_DIGIT
(304C) 1DA1 0001110110100001 ( 78)                         ADD R6, R6, #1
(304D) 0FFC 0000111111111100 ( 79)                         BRnzp INNER_LOOP
(304E) 1DA0 0001110110100000 ( 80) CHECK_DIGIT             ADD R6, R6, #0
(304F) 2020 0000001000000010 ( 81)                         BRp OUTPUT
(3050) 16E0 0001011011100000 ( 82)                         ADD R3, R3, #0
(3051) 0404 0000010000000100 ( 83)                         BRz INCREMENT
(3052) 203E 0010000000111110 ( 84) OUTPUT                  LD R0, ASCII_ZERO
(3053) 1006 0001000000000110 ( 85)                         ADD R0, R0, R6
(3054) F021 1111000000100001 ( 86)                         OUT
(3055) 16E1 0001011011100001 ( 87)                         ADD R3, R3, #1
(3056) 14A1 0001010010100001 ( 88) INCREMENT               ADD R2, R2, #1
(3057) 5DA0 0101110110100000 ( 89)                         AND R6, R6, #0
(3058) 993F 1001100100111111 ( 90)                         NOT R4, R4
(3059) 1921 0001100100100001 ( 91)                         ADD R4, R4, #1
(305A) 1B44 0001101101000100 ( 92)                         ADD R5, R5, R4
(305B) 0FEA 0000111111101010 ( 93)                         BRnzp OUTER_LOOP
(305C) 2034 0010000000110100 ( 94) END                     LD R0, ASCII_ZERO
(305D) 1005 0001000000000101 ( 95)                         ADD R0, R0, R5
(305E) F021 1111000000100001 ( 96)                         OUT
(305F) E02D 1110000000101101 ( 97)                         LEA R0, SPACE
(3060) F022 1111000000100010 ( 98)                         PUTS
(3061) 2639 0010011000111001 ( 99)                         LD R3, SAVER3
(3062) 2837 0010100000110111 (100)                         LD R4, SAVER4
(3063) 2E35 0010111000110101 (101)                         LD R7, SAVER7
(3064) C1C0 1100000111000000 (102)                         RET
(3065) 1B20 0001101100100000 (103) ITERATIVE_FIBONACCI     ADD R5, R4, #0
(3066) 4FD9 0100111111011001 (104)                         JSR CONVERT_TO_ASCII
(3067) 1D20 0001110100100000 (105)                         ADD R6, R4, #0
(3068) 18C6 0001100011000110 (106)                         ADD R4, R3, R6
(3069) 17A0 0001011110100000 (107)                         ADD R3, R6, #0
(306A) 127F 0001001001111111 (108)                         ADD R1, R1, #-1
(306B) 0401 0000010000000001 (109)                         BRz FINISH
(306C) 0FF8 0000111111111000 (110)                         BRnzp ITERATIVE_FIBONACCI
(306D) F025 1111000000100101 (111) FINISH                  HALT
(306E) A000 0000000000001010 (112) PROMPT                  .FILL 0x000A
(306F) 4500 0000000001000101 (113)                         .FILL 0x0045
(3070) 006E 0000000001101110 (114)                         .FILL 0x006E
(3071) 0074 0000000001110100 (115)                         .FILL 0x0074
(3072) 0065 0000000001100101 (116)                         .FILL 0x0065
(3073) 0072 0000000001110010 (117)                         .FILL 0x0072
(3074) 0020 0000000000100000 (118)                         .FILL 0x0020
(3075) 0061 0000000001100001 (119)                         .FILL 0x0061
(3076) 0020 0000000000100000 (120)                         .FILL 0x0020
(3077) 006E 0000000001101110 (121)                         .FILL 0x006E
(3078) 0075 0000000001110101 (122)                         .FILL 0x0075
(3079) 006D 0000000001101101 (123)                         .FILL 0x006D
(307A) 0062 0000000001100010 (124)                         .FILL 0x0062
(307B) 0065 0000000001100101 (125)                         .FILL 0x0065
(307C) 0072 0000000001110010 (126)                         .FILL 0x0072
(307D) 0020 0000000000100000 (127)                         .FILL 0x0020
(307E) 0066 0000000001100110 (128)                         .FILL 0x0066
(307F) 0072 0000000001110010 (129)                         .FILL 0x0072
(3080) 006F 0000000001101111 (130)                         .FILL 0x006F
(3081) 006D 0000000001101101 (131)                         .FILL 0x006D
(3082) 0020 0000000000100000 (132)                         .FILL 0x0020
(3083) 0033 0000000000110011 (133)                         .FILL 0x0033
(3084) 0020 0000000000100000 (134)                         .FILL 0x0020
(3085) 0074 0000000001110100 (135)                         .FILL 0x0074
(3086) 006F 0000000001101111 (136)                         .FILL 0x006F
(3087) 0020 0000000000100000 (137)                         .FILL 0x0020
(3088) 0032 0000000000110010 (138)                         .FILL 0x0032
(3089) 0033 0000000000110011 (139)                         .FILL 0x0033
(308A) 003A 0000000000111010 (140)                         .FILL 0x003A
(308B) 0020 0000000000100000 (141)                         .FILL 0x0020
(308C) 0000 0000000000000000 (142)                         .FILL 0x0000
(308D) 0020 0000000000100000 (143) SPACE                   .FILL 0x0020
(308E) 0000 0000000000000000 (144)                         .FILL 0x0000
(308F) 0000 0000000000000000 (145) NUMBER                  .FILL 0x0000
(3090) 0000 0000000000000000 (146) FLAG                    .FILL 0x0000
(3091) 3000 0000000000110000 (147) ASCII_ZERO              .FILL 0x0030
(3092) 3300 0000000000110011 (148) ASCII_THREE             .FILL 0x0033
(3093) 3900 0000000000111001 (149) ASCII_NINE              .FILL 0x0039
(3094) 2710 0010011100010000 (150) NUMBERS                 .FILL 0x2710
(3095) 3E80 0000001111101000 (151)                         .FILL 0x03E8
(3096) 0064 0000000001100100 (152)                         .FILL 0x0064
(3097) 000A 0000000000001010 (153)                         .FILL 0x000A
(3098) 0000 0000000000000000 (154)                         .FILL 0x0000
(3099) 0000 0000000000000000 (155) SAVER7                  .FILL 0x0000
(309A) 0000 0000000000000000 (156) SAVER4                  .FILL 0x0000
(309B) 0000 0000000000000000 (157) SAVER3                  .FILL 0x0000
(0000) 0000 0000000000000000 (158)                         .END
